<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RandomDog</name>
    </assembly>
    <members>
        <member name="T:RandomDog.Dog">
            <summary>
            DOG!
            </summary>
        </member>
        <member name="P:RandomDog.Dog.Message">
            <summary>
            Doggy Image
            </summary>
        </member>
        <member name="P:RandomDog.Dog.Status">
            <summary>
            The status of dog
            </summary>
        </member>
        <member name="P:RandomDog.Dog.Code">
            <summary>
            Error Code if any, 200 if success
            </summary>
        </member>
        <member name="M:RandomDog.Dog.Fetch(System.String,System.String)">
            <summary>
            Get Dog
            </summary>
            <returns></returns>
        </member>
        <member name="T:RandomDog.DogInfo">
            <summary>
            Get all dog info.
            </summary>
        </member>
        <member name="P:RandomDog.DogInfo.Message">
            <summary>
            A KeyValue dictionary of Dogs/Breeds/Sub-breeds.
            </summary>
        </member>
        <member name="P:RandomDog.DogInfo.Status">
            <summary>
            The status of the dog collection
            </summary>
        </member>
        <member name="P:RandomDog.DogInfo.Doggies">
            <summary>
            An IEnumerable type list you can parse over to get specifics dogs and such
            </summary>
        </member>
        <member name="M:RandomDog.DogInfo.Request">
            <summary>
            Request for a DogInfo list.
            </summary>
            <returns></returns>
        </member>
        <member name="P:RandomDog.DogInfo.Requested">
            <summary>
            Get the last requested <see cref="T:RandomDog.DogInfo"/> to save on performance - Does not include failed request
            </summary>
        </member>
        <member name="T:RandomDog.DogList">
            <summary>
            Represents a List of Dogs and their sub breeds in the forms of arrays.
            </summary>
        </member>
        <member name="P:RandomDog.DogList.Item(System.String)">
            <summary>
            Get all sub breeds of a dog via its name
            </summary>
            <param name="breed"></param>
            <returns></returns>
        </member>
        <member name="M:RandomDog.DogList.GetEnumerator">
            <summary>
            Get all dog names
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
